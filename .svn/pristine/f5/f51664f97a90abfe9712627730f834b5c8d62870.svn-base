package com.sim.server.game.roleplay.player;

import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;

import com.sim.server.game.model.model.PlayerInfo;

/**
 * @author liwen
 * @date:2017年11月13日 下午2:38:39
 * @Function:玩家组队
 * @version 1.0
 */
public class PlayerTeam {
	// 队伍ID
	private Long teamId; 
	// 敌人队伍ID
	private Long enemyTeamId; 
	// 当前队伍的状态,1:正在游戏,0:闲置
	private Integer state ;
	// 当前队伍是否组队成功
	private boolean isComplete ;
	// 当前队伍的玩家数量
	private List<PlayerInfo> playerInfos = new CopyOnWriteArrayList<PlayerInfo>();

	public Long getTeamId() {
		return teamId;
	}

	public void setTeamId(Long teamId) {
		this.teamId = teamId;
	}

	public Integer getState() {
		return state;
	}

	public void setState(Integer state) {
		this.state = state;
	}

	public List<PlayerInfo> getPlayerInfos() {
		return playerInfos;
	}

	public void setPlayerInfos(List<PlayerInfo> playerInfos) {
		this.playerInfos = playerInfos;
	}

	public boolean isComplete() {
		return isComplete;
	}

	public void setComplete(boolean isComplete) {
		this.isComplete = isComplete;
	}

	public Long getEnemyTeamId() {
		return enemyTeamId;
	}

	public void setEnemyTeamId(Long enemyTeamId) {
		this.enemyTeamId = enemyTeamId;
	}
	
	public boolean isLose() {
		int count = 0 ;
		for (PlayerInfo playerInfo : playerInfos) {
			if(playerInfo.getIsLive() == 1) { // 活着
				count++;
			}
		}
		return count == 0 ? true : false ;
	}

	@Override
	public String toString() {
		return "PlayerTeam [teamId=" + teamId + ", enemyTeamId=" + enemyTeamId + ", state=" + state + ", isComplete="
				+ isComplete + ", playerInfos=" + playerInfos + "]";
	}

}
