package com.sim.server.game.roleplay.player;

import java.util.LinkedList;

import com.sim.server.game.model.model.BaseManager;
import com.sim.server.game.model.model.FinancialRequestMsg;
import com.sim.server.game.roleplay.bean.Equipment;
import com.sim.server.game.roleplay.bean.Material;
import com.sim.server.game.roleplay.bean.WareHouse;
import com.sim.server.game.roleplay.init.ResourceDataLoader;
import com.sim.server.game.roleplay.manager.RoomManager;
import com.sim.server.game.roleplay.room.Room;

/**
 * @author liwen
 * @date:2017年12月19日 下午2:05:16
 * @Function: 采购总监
 * @version 1.0
 */
public class PurchaseManager extends BaseManager {

	// 购买仓库/材料/操作桌的数量
	private int count = -1;
	// 采购需要的花费
	private int cost;

	public PurchaseManager() {
		roleId = 4;
		roleType = 4;
		roleName = "PurchaseManager";
	}

	public int getCount() {
		return count;
	}

	public void setCount(int count) {
		this.count = count;
	}

	public void purchaseWarehouse() {
		Room room = RoomManager.getNewRoomByCtx(ctx);
		for (int i = 0; i < count; i++) {
			// 从数据库中取出一个存到公司
			LinkedList<WareHouse> wareHousesDB = (LinkedList<WareHouse>) ResourceDataLoader.getInstance()
					.getWareHousesDB();
			WareHouse wareHouse = wareHousesDB.pop();
			room.addWarehouse(wareHouse);
		}

	}

	public void purchaseMaterial() {
		Room room = RoomManager.getNewRoomByCtx(ctx);
		for (int i = 0; i < count; i++) {
			// 从数据库中取出一个存到公司
			LinkedList<Material> materials = (LinkedList<Material>) ResourceDataLoader.getInstance().getMaterialsDB();
			Material material = materials.pop();
			// 获取仓库
			WareHouse wareHouse = room.getWareHouseByType(1);
			if (wareHouse != null) {
				wareHouse.getList().add(material);
			} else {
				// 如果没有仓库,则需要提示客户端购买仓库.

			}
			room.addMaterial(material);
		}

	}

	public void purchaseEquipment() {
		Room room = RoomManager.getNewRoomByCtx(ctx);
		for (int i = 0; i < count; i++) {
			// 从数据库中取出一个存到公司
			LinkedList<Equipment> equipments = (LinkedList<Equipment>) ResourceDataLoader.getInstance()
					.getEquipmentsDB();
			Equipment equipment = equipments.pop();
			room.addEquipment(equipment);
		}

	}

	public int getCost() {
		return cost;
	}

	public void setCost(int cost) {
		this.cost = cost;
	}

	/**
	 * 准备采购仓库
	 * 
	 * @param count2
	 */
	public void preparePurchaseWarehouse(Integer count) {

	}

	public void purchaseMaterial(Integer count) {
		Room room = RoomManager.getNewRoomByCtx(ctx);
		BaseManager purchaseManager = room.getPurchaseManager();
		int price = 100;
		Integer cost = count * price;
		// 创建财务请款实体bean
		FinancialRequestMsg msg = new FinancialRequestMsg();
		msg.setMoney(cost);
		msg.setRoleId(purchaseManager.getRoleId());
		msg.setMsg("采购原料请款");
		msg.setFinancialRequestMsgId(room.getFinancialRequestMsgs().size());
		msg.setType(13);
		room.getFinancialRequestMsgs().add(msg);
	}

	public void purchaseEquipment(Integer count) {
		// 计算生产桌总花费
		Integer cost = count * 100;
		// 找到财务总监
		Room room = RoomManager.getNewRoomByCtx(ctx);
		PurchaseManager purchaseManager = (PurchaseManager) room.getPurchaseManager();
		// 创建财务请款实体bean
		FinancialRequestMsg msg = new FinancialRequestMsg();
		msg.setMoney(cost);
		msg.setRoleId(purchaseManager.getRoleId());
		msg.setMsg("采购设备请款");
		msg.setFinancialRequestMsgId(room.getFinancialRequestMsgs().size());
		msg.setType(12);
		room.getFinancialRequestMsgs().add(msg);
	}

	public void purchaseWarehouse(Integer count) {
		// 计算开销
		int cost = count * 10000;
		// 找到财务经理
		Room room = RoomManager.getNewRoomByCtx(ctx);
		// 获取采购经理
		PurchaseManager purchaseManager = (PurchaseManager) room.getPurchaseManager();
		// 创建财务请款实体bean
		FinancialRequestMsg msg = new FinancialRequestMsg() ;
		msg.setMoney(cost);
		msg.setRoleId(purchaseManager.getRoleId());
		msg.setMsg("采购仓库请款");
		msg.setFinancialRequestMsgId(room.getFinancialRequestMsgs().size());
		msg.setType(11);
		room.getFinancialRequestMsgs().add(msg);
	}

}
