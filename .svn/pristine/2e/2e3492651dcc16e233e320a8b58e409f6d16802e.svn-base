package com.sim.server.game.roleplay.handler.purchase;

import java.util.List;

import com.sim.server.game.common.RolePlayProtocolConstant;
import com.sim.server.game.engine.core.HandlerEntity;
import com.sim.server.game.engine.handler.BaseHandler;
import com.sim.server.game.message.request.purchase.PurchaseMaterialRequest;
import com.sim.server.game.message.response.finance.FinancialListResponse;
import com.sim.server.game.message.response.purchase.PurchaseMaterialResponse;
import com.sim.server.game.model.model.BaseManager;
import com.sim.server.game.model.model.FinancialRequestMsg;
import com.sim.server.game.roleplay.manager.RoomManager;
import com.sim.server.game.roleplay.player.PurchaseManager;
import com.sim.server.game.roleplay.room.Room;

import io.netty.channel.ChannelHandlerContext;
/**
 * @author liwen
 * @date:2017年12月22日 下午1:24:44
 * @Function:采购材料请求处理
 * @version 1.0
 */
@HandlerEntity(id=RolePlayProtocolConstant.PURCHASE_MATERIAL_REQUEST_PROTOCOL,desc="采购仓库请求处理")
public class PurchaseMaterialHandler extends BaseHandler {

	public void run() {
		PurchaseMaterialRequest request = (PurchaseMaterialRequest) baseRequest ;
		Integer count = request.getCount();
		int price = 100 ;
		Integer cost = count * price ;
		// 获取财务经理
		Room room = RoomManager.getNewRoomByCtx(ctx);
		BaseManager financeManager = room.getFinanceManager();
		// 获取采购经理
		PurchaseManager purchaseManager = (PurchaseManager) room.getPurchaseManager();
//		purchaseManager.setCount(request.getCount());
//		purchaseManager.setCost(cost);
		
		purchaseManager.purchaseMaterial(count);
		
//		// 创建财务请款实体bean
//		FinancialRequestMsg msg = new FinancialRequestMsg() ;
//		msg.setMoney(cost);
//		msg.setRoleId(purchaseManager.getRoleId());
//		msg.setMsg("采购原料请款");
//		msg.setFinancialRequestMsgId(room.getFinancialRequestMsgs().size());
//		msg.setType(13);
//		room.getFinancialRequestMsgs().add(msg);
		
		ChannelHandlerContext financeCtx = financeManager.getCtx();
		// 通知财务经理开销
		PurchaseMaterialResponse response = new PurchaseMaterialResponse(financeCtx) ;
		response.setCost(cost);
		response.writeAndFlush();
		
		// 将财务请款列表同步给财务
		syncFinancialMsgs(financeCtx,room.getFinancialRequestMsgs());
	}
	/**
	 *  同步所有请款列表
	 * @param financeCtx
	 */
	private void syncFinancialMsgs(ChannelHandlerContext financeCtx,List<FinancialRequestMsg> financialRequestMsgs) {
		FinancialListResponse response = new FinancialListResponse(financeCtx);
		response.setFinancialRequestMsgs(financialRequestMsgs);
		response.writeAndFlush();
	}
	
	@Override
	public Object clone() {
		PurchaseMaterialHandler handler = new PurchaseMaterialHandler();
		handler.baseRequest = this.baseRequest;
		handler.ctx = this.ctx;
		handler.channel = this.channel;
		return handler;
	}

}
